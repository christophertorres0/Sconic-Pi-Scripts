=begin

CHALLENGE A: Make this code more efficient by identifying and eliminating repetition (use loops!)
CHALLENGE B: Make this code more easily adaptable by allowing the user to change both drum samples by only changing 2 lines of code.
CHALLENGE C: Make the :melody live_loop more dynamic by using a variable to increase the 'cutoff' value every 8 beats; increase the cutoff from 80 up to 120 (by 10's), then back down to 80, then back up to 120, then back down to 80, etc...

=end
c=80
#'Get Lucky' for Motorbike Helmet demo
use_synth :tb303
# Here's how "Attack" and "Release" work: http://sonic-pi.mehackit.org/exercises/en/03-tweak-the-sounds/02-synth-options.html
use_synth_defaults release: 0.25, attack: 0.5, cutoff: 100
define :first do
  play chord(:A3, :minor)
  sleep 2
  play chord(:C4, :major)
  sleep 2
  play chord(:E3, :minor)
  sleep 2
  play chord(:D4, :major)
  sleep 2
end
# play the intro by itself
first
# loop the intro
live_loop :synth_intro do
  first
end
# loop the melody (which is Pharrell 's voice in the original song)
live_loop :melody do
  use_synth :tb303
  # this line of code will change the sound of all synth notes in this loop
  use_synth_defaults attack: 0.1, release: 0.1, cutoff:c, amp: 0.5
  3. times do
    sleep 0.25
    play :C5
    sleep 0.125
    play :C5
  end
  sleep 0.25
  play :D5
  sleep 0.5
  sleep 0.25
  play :C5
  sleep 0.25
  2. times do
    play :C5
    sleep 0.25
    play :C5
    sleep 0.125
  end
  play :C5
  sleep 0.25
  play :D5
  sleep 0.5
  sleep 0.25
  play :B4
  sleep 0.25
  2. times do
    play :B4
    sleep 0.25
    play :B4
    sleep 0.125
  end
  play :B4
  sleep 0.25
  play :D5
  sleep 0.5
  sleep 0.25
  play :A4
  sleep 0.25
  2. times do
    play :A4
    sleep 0.25
    play :A4
    sleep 0.125
  end
  play :B4
  sleep 0.25
  play :A4
  sleep 0.25
  play :G4
  sleep 0.25
end
h= :drum_heavy_kick
s= :drum_snare_hard
# loop the drum beat
live_loop :drums do
  sample :h
  sleep 0.5
  sample :s
  sleep 0.5
  sample :h
  sleep 0.25
  sample :s
  sleep 0.25
end
